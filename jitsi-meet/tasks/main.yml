---
# install jitsi meet

- name: Ensure jitsi group exists
  group:
    name: "{{ jitsi_default_group_name }}"
    gid: "{{ jitsi_default_group_id }}"
    state: present

- name: Ensure jitsi user exists
  user:
    name: "{{ jitsi_default_user_name }}"
    uid: "{{ jitsi_default_user_id }}"
    state: present
    group: "{{ jitsi_default_group_name }}"
    append: true
    create_home: false

- name: Add management users to jitsi group
  user:
    name: "{{ item.name }}"
    groups:
    - "{{ jitsi_default_group_name }}"
    append: true
  with_items: "{{ users }}"

- name: Create install directory
  file:
    path: "{{ jitsi_install_dir }}"
    state: directory
    mode: '0770'
    owner: "{{ jitsi_default_user_name }}"
    group: "{{ jitsi_default_group_name }}"

- name: Clone git repo
  git:
    repo: "https://github.com/jitsi/docker-jitsi-meet"
    dest: "{{ jitsi_install_dir }}"
    version: "{{ jitsi_version_tag }}"

- name: Copy sample config
  copy:
    src: "{{ jitsi_install_dir }}/env.example"
    dest: "{{ jitsi_install_dir }}/.env"
    remote_src: yes
    force: no

- name: Generate passwords
  command: "{{ jitsi_install_dir }}/gen-passwords.sh"

- name: Change public URL
  lineinfile:
    path: "{{ jitsi_install_dir }}/.env"
    regexp: "PUBLIC_URL="
    line: "PUBLIC_URL=https://{{jitsi_domain}}"
    state: present

- name: Change Docker Host Address
  lineinfile:
    path: "{{ jitsi_install_dir }}/.env"
    regexp: "DOCKER_HOST_ADDRESS="
    line: "DOCKER_HOST_ADDRESS={{ ansible_host }}"
    state: present

- name: Disable Let's Encrypt
  lineinfile:
    path: "{{ jitsi_install_dir }}/.env"
    regexp: "ENABLE_LETSENCRYPT="
    line: "ENABLE_LETSENCRYPT=0"
    state: present

- name: Disable https
  lineinfile:
    path: "{{ jitsi_install_dir }}/.env"
    regexp: "DISABLE_HTTPS="
    line: "DISABLE_HTTPS=1"
    state: present

- name: Disable https redirection
  lineinfile:
    path: "{{ jitsi_install_dir }}/.env"
    regexp: "ENABLE_HTTP_REDIRECT="
    line: "ENABLE_HTTP_REDIRECT=0"
    state: present

- name: Configure config directory
  lineinfile:
    path: "{{ jitsi_install_dir }}/.env"
    regexp: "CONFIG="
    line: "CONFIG={{ jitsi_install_dir }}/.jitsi-meet-cfg"
    state: present

- name: Create config directories
  file:
    path: "{{ jitsi_install_dir }}/.jitsi-meet-cfg/{{item}}"
    state: directory
    mode: '0755'
    owner: "{{ jitsi_default_user_name }}"
    group: "{{ jitsi_default_group_name }}"
  with_items:
    - web/letsencrypt
    - transcripts
    - prosody/config
    - prosody/prosody-plugins-custom
    - jicofo
    - jvb
    - jigasi
    - jibri

- name: Allow RDP Media (tcp)
  ufw:
    rule: allow
    port: "4443"
    proto: tcp

- name: Allow RDP Media (udp)
  ufw:
    rule: allow
    port: "10000"
    proto: udp

- name: Copy docker-compose file
  template:
    src: docker-compose.yaml.j2
    dest: "{{ jitsi_install_dir }}/docker-compose.yml"
    mode: '660' # rw- rw- ---
    owner: "{{ jitsi_default_user_name }}"
    group: "{{ jitsi_default_group_name }}"
  notify: Restart docker-compose

- name: Start docker-compose
  docker_compose:
    project_src: "{{ jitsi_install_dir }}"
    pull: yes
    restarted: yes
  register: output