version: "3"

networks:
  traefik-proxy:
    external: true
  db-network:
    internal: true

services:
  db:
    image: {{ mattermost_db_docker_image }}
    networks:
      - db-network
    restart: unless-stopped
    volumes:
      - /mnt/{{ hostname }}-volume/mattermost/db/var/lib/postgresql/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - db.env
  app:
    depends_on:
      - db
    image: {{ mattermost_app_docker_image }}
    networks:
      - traefik-proxy
      - db-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.mattermost.rule=Host(`{{ mattermost_domain }}`)
{% if mattermost_https == "enabled" %}
      - traefik.http.routers.mattermost.entrypoints=https
      - traefik.http.routers.mattermost.tls=true
      - traefik.http.routers.mattermost.tls.certresolver=le-resolver
{% else %}
      - traefik.http.routers.mattermost.entrypoints=http
{% endif %}
      - traefik.http.services.mattermost.loadbalancer.server.port=8065
    restart: unless-stopped
    volumes:
      - /mnt/{{ hostname }}-volume/mattermost/app
      - /mnt/{{ hostname }}-volume/mattermost/app/config:/mattermost/config:rw
      - /mnt/{{ hostname }}-volume/mattermost/app/data:/mattermost/data:rw
      - /mnt/{{ hostname }}-volume/mattermost/app/logs:/mattermost/logs:rw
      - /mnt/{{ hostname }}-volume/mattermost/app/plugins:/mattermost/plugins:rw
      - /mnt/{{ hostname }}-volume/mattermost/app/client-plugins:/mattermost/client/plugins:rw
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - app.env