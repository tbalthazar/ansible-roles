---
# install nextcloud 

- name: Ensure nextcloud group exists
  group:
    name: "{{ nextcloud_default_group_name }}"
    gid: "{{ nextcloud_default_group_id }}"
    state: present

- name: Ensure nextcloud user exists
  user:
    name: "{{ nextcloud_default_user_name }}"
    uid: "{{ nextcloud_default_user_id }}"
    state: present
    group: "{{ nextcloud_default_group_name }}"
    append: true
    create_home: false

- name: Add management users to nextcloud group
  user:
    name: "{{ item.name }}"
    groups:
    - "{{ nextcloud_default_group_name }}"
    append: true
  with_items: "{{ users }}"

- name: Create install directory
  file:
    path: "/opt/nextcloud"
    state: directory
    mode: '0770'
    owner: "{{ nextcloud_default_user_name }}"
    group: "{{ nextcloud_default_group_name }}"

- name: Create postgres directories
  file:
    path: "/mnt/{{ hostname }}-volume/nextcloud/db/var/lib/postgresql/data"
    state: directory
    mode: '770' # rwx rwx ---
    owner: "{{ nextcloud_default_user_name }}"
    group: "{{ nextcloud_default_group_name }}"

- name: Copy app env file
  template:
    src: app.env.j2
    dest: "/opt/nextcloud/app.env"
    mode: '660' # rw- rw- ---
    owner: "{{ nextcloud_default_user_name }}"
    group: "{{ nextcloud_default_group_name }}"
  notify: Restart docker-compose

- name: Copy db env file
  template:
    src: db.env.j2
    dest: "/opt/nextcloud/db.env"
    mode: '660' # rw- rw- ---
    owner: "{{ nextcloud_default_user_name }}"
    group: "{{ nextcloud_default_group_name }}"
  notify: Restart docker-compose

- name: Copy docker-compose file
  template:
    src: docker-compose.yaml.j2
    dest: "/opt/nextcloud/docker-compose.yaml"
    mode: '660' # rw- rw- ---
    owner: "{{ nextcloud_default_user_name }}"
    group: "{{ nextcloud_default_group_name }}"
  notify: Restart docker-compose

- name: Start docker-compose
  docker_compose:
    project_src: "/opt/nextcloud"
    state: present