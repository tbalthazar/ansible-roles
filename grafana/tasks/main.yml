
---
# install grafana 

- name: Ensure grafana group exists
  group:
    name: "{{ grafana_default_group_name }}"
    gid: "{{ grafana_default_group_id }}"
    state: present

- name: Ensure grafana user exists
  user:
    name: "{{ grafana_default_user_name }}"
    uid: "{{ grafana_default_user_id }}"
    state: present
    group: "{{ grafana_default_group_name }}"
    append: true
    create_home: false

- name: Add management users to grafana group
  user:
    name: "{{ item.name }}"
    groups:
    - "{{ grafana_default_group_name }}"
    append: true
  with_items: "{{ users }}"

- name: Create install directory
  file:
    path: "{{ grafana_install_dir }}"
    state: directory
    mode: '0770'
    owner: "{{ grafana_default_user_name }}"
    group: "{{ grafana_default_group_name }}"

- name: Create config directory
  file:
    path: "/mnt/{{ hostname }}-volume/grafana/app/var/lib/grafana"
    state: directory
    mode: '775' # rwx rwx ---
    owner: "{{ grafana_default_user_name }}"
    group: "{{ grafana_default_group_name }}"

# - name: Copy config file
#   template:
#     src: grafana.yml.j2
#     dest: "/mnt/{{ hostname }}-volume/grafana/app/etc/grafana/grafana.yml"
#     mode: '664' # rw- rw- r--
#     owner: "{{ grafana_default_user_name }}"
#     group: "{{ grafana_default_group_name }}"
#   notify: Restart docker-compose

- name: Copy docker-compose file
  template:
    src: docker-compose.yaml.j2
    dest: "{{ grafana_install_dir }}/docker-compose.yaml"
    mode: '660' # rw- rw- ---
    owner: "{{ grafana_default_user_name }}"
    group: "{{ grafana_default_group_name }}"
  notify: Restart docker-compose

- name: Start docker-compose
  docker_compose:
    project_src: "{{ grafana_install_dir }}"
    pull: yes
    state: present
